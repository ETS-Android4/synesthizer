import React, { useState, useEffect } from "react";
import "./CreatePlaylist.css";

import axios from "axios";
import { Link } from "react-router-dom";

import { Card } from "./../../containers";
import { Button, SkeletonPulse, useToast } from "./../../components";
import api from "../../../api";

function CreatePlaylist() {

  // Session state variable
  const [playlistSession, setPlaylistSession] = useState(null);

  // Create a seperate playlist variable for efficiency when updating (don't need to update entire session object anytime a character changes in the name)
  const [playlistName, setPlaylistName] = useState("");

  const [showSuccess, showError, renderToast] = useToast();

  useEffect(() => {
    getSessionPlaylist();
  }, []);

  function getSessionPlaylist() {
    axios
      .get(api.playlistSession)
      .then(function (response) {
        console.log(response);
        setPlaylistName(response.data.name);
        if (response.data.name === undefined) {
          response.data.name = "";
        }
        if (response.data.image === undefined) {
          response.data.image = "";
        }
        setPlaylistSession(response.data);
      })
      .catch(function (error) {
        console.error(error);
      });
  }

  function handleChange(e) {
     setPlaylistName(e.target.value);
  }

  function createPlaylist() {
    let postPlaylist = playlistSession;
    postPlaylist.name = playlistName;
    console.log(postPlaylist);
    axios
      .post(api.playlist, postPlaylist)
      .then(function(response) {
        console.log(response);
      })
      .catch(function(error) {
        console.error(error);
      });
  }

  function savePlaylist() {
    let putPlaylist = playlistSession;
    putPlaylist.name = playlistName;
    console.log(putPlaylist);
    axios
      .put(api.playlistSession, putPlaylist)
      .then(function(response) {
        console.log(response);
        getSessionPlaylist();
        showSuccess("Your playlist saved successfully");
      })
      .catch(function(error) {
        console.error(error);
        showError("Error saving playlist");
      });
  }

  return (
    <div className="create-playlist">
      {renderToast()}
      <Card className="create-playlist-card">
        <div className="create-playlist-header">
          <div className="create-playlist-header-picture">
            { playlistSession !== null && playlistSession.image !== ""
              ? <img alt="playlist-profile" />
              : <div className="clouds-wrapper">
                  <div className="cloud">
                    <div className="cloud-one"/>
                    <div className="cloud-two"/>
                  </div>
                  <p>
                    Upload Image
                  </p>
                </div>
            }
          </div>
          <div className="create-playlist-header-info">
            {playlistSession !== null ? (
              <input value={playlistName} onChange={handleChange}></input>
            ) : (
              <SkeletonPulse style={{width: "400px", height: "56px", borderRadius: "30px"}}></SkeletonPulse>
            )}
            <p>Playlist generated by user</p>
            <Button style={{ width: "200px" }} isBlue={true}>
              Generate Smart Playlist
            </Button>
          </div>
        </div>
        <div className="create-playlist-songs">
          <div className="create-playlist-song-labels format-column-grid">
            <div>Song</div>
            <div>Artist</div>
            <div>Album</div>
            <div>Length</div>
            <div></div>
          </div>
          {playlistSession !== null ? (
            playlistSession.tracks.length > 0 ? (
              <div>
                {playlistSession.tracks.map(function (song, index) {
                  return (
                    <div
                      key={index}
                      className="format-column-grid formatted-song-row"
                    >
                      <Link to="">
                        <div>{song.name}</div>
                      </Link>
                      <Link to="">
                        <div>{song.artists[0].name}</div>
                      </Link>
                      <Link to="">
                        <div>{song.album.name}</div>
                      </Link>
                      <div>{song.duration_ms}</div>
                    </div>
                  );
                })}
              </div>
            ) : (
              <div className="create-playlist-no-songs">
                <p>No songs added to playlist</p>
              </div>
            )
          ) : null}
        </div>
      </Card>
      <div className="create-playlist-button-wrapper">
        <Button isGreen={true} onClick={() => showError("request submitted successfully")}>
          Save Playlist
        </Button>
        <div style={{ width: "48px"}}/>
        <Button isPrimary={true} onClick={() => createPlaylist()}>
          Create Playlist
        </Button>
      </div>
    </div>
  );
}

export default CreatePlaylist;
