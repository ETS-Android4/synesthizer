import React, { useState, useEffect } from "react";
import "./CreatePlaylist.css";

import axios from "axios";
import { Link } from "react-router-dom";

import { Card } from "./../../containers";
import { Button, SkeletonPulse } from "./../../components";
import api from "../../../api";

function CreatePlaylist() {
  const [playlistSession, setPlaylistSession] = useState(null);
  const [playlistName, setPlaylistName] = useState("");

  useEffect(() => {
    getSessionPlaylist();
  }, []);

  function getSessionPlaylist() {
    axios
      .get(api.playlistSession)
      .then(function (response) {
        console.log(response);
        // setPlaylistSession(response.data);
        setPlaylistName(response.data.name);
        setPlaylistSession({
          id: 0,
          name: "test name",
          image: "",
          tracks: [
            {
              id: "0IkKz2J93C94Ei4BvDop7P",
              name: "Party Rock Anthem",
              track_number: 3,
              duration_ms: 0,
              popularity: 7,
              artists: [
                {
                  id: "3sgFRtyBnxXD5ESfmbK4dl",
                  name: "LMFAO",
                  image:
                    "https://i.scdn.co/image/2d75f5222d8a92d5e12419ae3e5238261f943df6",
                },
                {
                  id: "3sgFRtyBnxXD5ESfmbK4dl",
                  name: "LMFAO",
                  image:
                    "https://i.scdn.co/image/2d75f5222d8a92d5e12419ae3e5238261f943df6",
                },
              ],
              album: {
                id: "1MbBSfcqLg2OjkeZ1RMSIq",
                name: "Sorry For Party Rocking",
                album_type: "album",
                image:
                  "https://i.scdn.co/image/ab67616d0000b273d77a9a738c99b8c4f7a7c3ee",
                release_date: "2011-01-01",
                popularity: 0,
              },
            },
          ],
        });
      })
      .catch(function (error) {
        console.error(error);
      });
  }

  function handleChange(e) {
    console.log(e.target.value);
    setPlaylistName(e.target.value);
  }

  return (
    <div className="create-playlist">
      <Card className="create-playlist-card">
        <div className="create-playlist-header">
          <div className="create-playlist-header-picture">
            { playlistSession !== null && playlistSession.image !== ""
              ? <img alt="playlist-profile" />
              : <div className="clouds-wrapper">
                  <div className="cloud">
                    <div className="cloud-one"/>
                    <div className="cloud-two"/>
                  </div>
                  <p>
                    Upload Image
                  </p>
                </div>
            }
          </div>
          <div className="create-playlist-header-info">
            {playlistSession !== null ? (
              <input value={playlistName} onChange={handleChange}></input>
            ) : (
              <SkeletonPulse style={{width: "400px", height: "56px", borderRadius: "30px"}}></SkeletonPulse>
            )}
            <p>Playlist generated by user</p>
            <Button style={{ width: "200px" }} isBlue={true}>
              Generate Smart Playlist
            </Button>
          </div>
        </div>
        <div className="create-playlist-songs">
          <div className="create-playlist-song-labels format-column-grid">
            <div>Song</div>
            <div>Artist</div>
            <div>Album</div>
            <div>Length</div>
            <div></div>
          </div>
          {playlistSession !== null ? (
            playlistSession.tracks.length > 0 ? (
              <div>
                {playlistSession.tracks.map(function (song, index) {
                  return (
                    <div
                      key={index}
                      className="format-column-grid formatted-song-row"
                    >
                      <Link to="">
                        <div>{song.name}</div>
                      </Link>
                      <Link to="">
                        <div>{song.artists[0].name}</div>
                      </Link>
                      <Link to="">
                        <div>{song.album.name}</div>
                      </Link>
                      <div>{song.duration_ms}</div>
                    </div>
                  );
                })}
              </div>
            ) : (
              <div className="create-playlist-no-songs">
                <p>No songs added to playlist</p>
              </div>
            )
          ) : null}
        </div>
      </Card>
      <div className="create-playlist-button-wrapper">
        <Button isGreen={true}>
          Save Playlist
        </Button>
        <div style={{ width: "48px"}}/>
        <Button isPrimary={true}>
          Create Playlist
        </Button>
      </div>
      
    </div>
  );
}

export default CreatePlaylist;
