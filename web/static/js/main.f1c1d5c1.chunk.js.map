{"version":3,"sources":["app/containers/card/Card.js","app/components/button/Button.js","app/components/skeleton-pulse/SkeletonPulse.js","app/components/song-card/SongCard.js","app/components/album-card/AlbumCard.js","app/components/artist-card/ArtistCard.js","app/views/landing/Landing.js","app/views/footer/Footer.js","app/views/sidebar/Sidebar.js","app/views/content-view/ContentView.js","app/views/selected-view/SelectedView.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","willHover","undefined","style","onClick","innerStyle","children","Button","isPrimary","SkeletonPulse","SongCard","skeletonPulse","alt","src","width","height","AlbumCard","ArtistCard","Landing","useState","willRedirectSongs","redirectSongs","useEffect","to","Footer","Sidebar","showSidebar","Fragment","ContentView","match","selectedCardId","setSelectedCardId","willRedirectSong","redirectSong","willRedirectArtist","redirectArtist","willRedirectAlbum","redirectAlbum","selectCard","id","push","display","margin","params","contentType","map","item","index","song","key","album","artist","marginTop","marginBottom","SelectedView","expandCard","setExpandCard","showDetails","setShowDetails","setTimeout","animationDelay","App","setShowSidebar","basename","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gfAoBeA,MAjBf,SAAcC,GACZ,OACE,yBACEC,UACE,QACCD,EAAME,UAAY,cAAgB,IACnC,UACqBC,IAApBH,EAAMC,UAA0BD,EAAMC,UAAY,QAErDG,MAAOJ,EAAMI,MACbC,QAAS,uBAAyBF,IAAlBH,EAAMK,QAAwBL,EAAMK,UAAY,OAEhE,yBAAKJ,UAAW,cAAeG,MAAOJ,EAAMM,YAAaN,EAAMO,Y,MCItDC,MAhBf,SAAgBR,GASd,OACE,yBAAKC,UAAW,WAPZD,EAAMS,UACD,iBAEF,IAIuCJ,QAAS,kBAAML,EAAMK,YAChEL,EAAMO,W,MCLEG,MANf,SAAuBV,GACrB,OACE,yBAAKC,UAAU,iBAAiBG,MAAOJ,EAAMI,S,MCqClCO,MAtCf,SAAkBX,GAChB,OACE,yBAAKC,UAAU,YAAYG,MAAOJ,EAAMI,MAAOC,QAAS,kBAAML,EAAMK,YAClE,yBAAKJ,UAAU,oBACb,yBAAKA,UAAU,4BACaE,IAAxBH,EAAMY,cACN,yBACEC,IAAI,YACJC,IAAI,6FAEN,kBAAC,EAAD,OAGJ,yBAAKb,UAAU,kBACb,iCAC4BE,IAAxBH,EAAMY,cACN,kBACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,QAASC,OAAQ,WAGnD,gCAC0Bb,IAAxBH,EAAMY,cACJ,2BACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,QAASC,OAAQ,WAGnD,uBAAGf,UAAU,iBACeE,IAAxBH,EAAMY,cACN,qBACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,OAAQC,OAAQ,e,MCS7CC,MAtCf,SAAmBjB,GACjB,OACE,yBAAKC,UAAU,aAAaG,MAAOJ,EAAMI,MAAOC,QAAS,kBAAML,EAAMK,YACnE,yBAAKJ,UAAU,qBACb,yBAAKA,UAAU,6BACaE,IAAxBH,EAAMY,cACN,yBACEC,IAAI,YACJC,IAAI,6FAEN,kBAAC,EAAD,OAGJ,yBAAKb,UAAU,mBACb,iCAC4BE,IAAxBH,EAAMY,cACN,kBACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,QAASC,OAAQ,WAGnD,gCAC0Bb,IAAxBH,EAAMY,cACJ,2BACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,QAASC,OAAQ,WAGnD,uBAAGf,UAAU,iBACeE,IAAxBH,EAAMY,cACN,qBACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,OAAQC,OAAQ,e,MCH7CE,MA1Bf,SAAoBlB,GAClB,OACE,yBAAKC,UAAU,cAAcG,MAAOJ,EAAMI,MAAOC,QAAS,kBAAML,EAAMK,YACpE,yBAAKJ,UAAU,sBACb,yBAAKA,UAAU,8BACaE,IAAxBH,EAAMY,cACN,yBACEC,IAAI,YACJC,IAAI,6FAEN,kBAAC,EAAD,OAGJ,yBAAKb,UAAU,oBACb,iCAC4BE,IAAxBH,EAAMY,cACN,aACA,kBAAC,EAAD,CAAeR,MAAO,CAACW,MAAO,QAASC,OAAQ,eCqB9CG,MAhCf,WAAoB,IAAD,EAE4BC,oBAAS,GAFrC,mBAETC,EAFS,KAEUC,EAFV,KAcjB,OAVAC,qBAAU,WACJF,GACFC,GAAc,KAEf,CAACD,IAOF,yBAAKpB,UAAU,uBACXoB,EAAoB,kBAAC,IAAD,CAAUG,GAAG,eAA2B,KAC9D,yBAAKvB,UAAU,+BACb,kBAAC,EAAD,KACE,sCACA,gDAGA,kBAAC,EAAD,CAAQQ,WAAW,EAAMJ,QAAS,WAZxCiB,GAAc,KAYR,e,MCnBKG,MAXf,WACE,OACE,yBAAKxB,UAAU,UAAf,mCAEE,uBAAGA,UAAU,YAAb,qC,MCaSyB,MAff,SAAiB1B,GACf,OACE,yBAAKC,UAAW,WAAaD,EAAM2B,YAAc,oBAAsB,KACnE3B,EAAM2B,YACN,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAMJ,GAAG,cAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,eAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,YAEA,O,MC2HKK,MA3Hf,YAAuC,EAAhB7B,MAAiB,IAAV8B,EAAS,EAATA,MAAS,EAEOV,mBAAS,MAFhB,mBAE9BW,EAF8B,KAEdC,EAFc,OAKIZ,oBAAS,GALb,mBAK9Ba,EAL8B,KAKZC,EALY,OAMQd,oBAAS,GANjB,mBAM9Be,EAN8B,KAMVC,EANU,OAOMhB,oBAAS,GAPf,mBAO9BiB,EAP8B,KAOXC,EAPW,OASXlB,mBAAS,MATE,mBA8BrC,SAASmB,EAAWC,GAClBR,EAAkBQ,GA6CpB,OA5EqC,UAWrCjB,qBAAU,WAEJY,GACFC,GAAe,GAEbC,GACFC,GAAc,GAEZL,GACFC,GAAa,KAEd,CAACC,EAAoBE,EAAmBJ,IAE3CV,qBAAU,WACe,OAAnBQ,GACFG,GAAa,KAEd,CAACH,IAiDF,yBAAK9B,UAAU,gBACZgC,EACC,kBAAC,IAAD,CAAUQ,MAAI,EAACjB,GAAI,cAAgBO,IACjC,KACJ,yBAAK9B,UAAU,wBACb,yBAAKA,UAAU,uBACb,gCACA,yBAAKG,MAAO,CAAEW,MAAO,UACrB,kBAAC,EAAD,CAAQN,WAAW,GAAnB,WAEF,yBAAKR,UAAU,+BACb,kBAAC,EAAD,CACEA,UAAU,sBACVK,WAAY,CACVoC,QAAS,OACT,iBAAkB,MAClBC,OAAQ,sBAGV,mCACA,oCACA,qCACA,2CAGJ,yBAAK1C,UAAU,sBAnEc,UAA7B6B,EAAMc,OAAOC,YACR,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAUC,EAAMC,GAC5C,OACE,kBAAC,EAAD,CACEC,KAAMF,EACNG,IAAKF,EACL5C,MAAO,CAAEuC,OAAQ,QACjBtC,QAAS,kBAAMkC,EAAWQ,IAC1BnC,eAAa,OAImB,WAA7BkB,EAAMc,OAAOC,YACf,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAUC,EAAMC,GAC5C,OACE,kBAAC,EAAD,CACEG,MAAOJ,EACPG,IAAKF,EACL5C,MAAO,CAAEuC,OAAQ,QACjBtC,QAAS,kBAAMkC,EAAWQ,IAC1BnC,eAAa,OAImB,YAA7BkB,EAAMc,OAAOC,YACf,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAUC,EAAMC,GAC5C,OACE,kBAAC,EAAD,CACEI,OAAQL,EACRG,IAAKF,EACL5C,MAAO,CAAEuC,OAAQ,QACjBtC,QAAS,kBAAMkC,EAAWQ,IAC1BnC,eAAa,OAMd,MA8BH,yBACEX,UAAU,8BACVG,MAAO,CAAEiD,UAAW,OAAQC,aAAc,QAE1C,kBAAC,EAAD,CACErD,UAAU,sBACVK,WAAY,CACVoC,QAAS,OACT,iBAAkB,MAClBC,OAAQ,sBAGV,qC,MC5DGY,MAhEf,YAAwC,EAAhBvD,MAAgB,EAAT8B,MAAU,IAAD,EACFV,oBAAS,GADP,mBAC/BoC,EAD+B,KACnBC,EADmB,OAEArC,oBAAS,GAFT,mBAE/BsC,EAF+B,KAElBC,EAFkB,KAetC,OAVApC,qBAAU,WACRqC,YAAW,WACTH,GAAc,GAEdG,YAAW,WACTD,GAAe,KACd,OACF,OACF,IAGD,yBAAK1D,UAAU,iBACb,yBACEA,UACE,sBAAwBuD,EAAa,+BAAiC,KAGxE,yBAAKvD,UAAU,2BACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,2BACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,yBACb,4BACE,kBAAC,EAAD,CAAeG,MAAO,CAAEW,MAAO,QAASC,OAAQ,WAElD,2BACE,kBAAC,EAAD,CAAeZ,MAAO,CAAEW,MAAO,QAASC,OAAQ,WAElD,2BACE,kBAAC,EAAD,CAAeZ,MAAO,CAAEW,MAAO,QAASC,OAAQ,aAIrD0C,EACC,yBAAKzD,UAAU,4BACZ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG6C,KAAI,SAAUC,EAAMC,GAC/C,OACE,yBACE/C,UAAW,UACXG,MAAO,CACLY,OAAQ,OACRD,MAAO,QACP4B,OAAQ,oBACRkB,eAAgBb,EAAQ,EAAI,MAG9B,kBAAC,EAAD,WAKN,SCFCc,MA/Cf,WAAgB,IAAD,EACyB1C,oBAAS,GADlC,mBACNO,EADM,KACOoC,EADP,KAGb,OACE,yBAAK9D,UAAU,OACb,kBAAC,IAAD,CAAe+D,SAAU,YACvB,kBAAC,IAAD,CAAOC,KAAK,QACV,kBAAC,EAAD,CAAStC,YAAaA,KAExB,yBAAK1B,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiE,OAAK,EAACD,KAAK,WAAWE,UAAWhD,IACxC,kBAAC,IAAD,CAAO8C,KAAK,QACV,yBACEhE,UAAU,6BACVI,QAAS,kBAAM0D,GAAgBpC,KAE/B,0BAAMvB,MAAO,CAAEkD,aAAc,QAC1B3B,EAAc,IAAM,MAGzB,yBAAK1B,UAAU,6BACb,kBAAC,IAAD,CAAOgE,KAAK,sBACT,YAAc,IAAZnC,EAAW,EAAXA,MACD,OAAO,4BAAKA,EAAMc,OAAOC,iBAI/B,yBAAK5C,UAAU,eACf,kBAAC,IAAD,CACEiE,OAAK,EACLD,KAAK,oBACLE,UAAWtC,IAEb,kBAAC,IAAD,CACEoC,KAAK,4BACLE,UAAWZ,IAEb,kBAAC,EAAD,YCvCMa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzC,MACvB,2DCZN0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,e","file":"static/js/main.f1c1d5c1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <div\n      className={\n        \"card\" +\n        (props.willHover ? \" card-hover\" : \"\") +\n        \" \" +\n        (props.className !== undefined ? props.className : \"null\")\n      }\n      style={props.style}\n      onClick={() => (props.onClick !== undefined ? props.onClick() : null)}\n    >\n      <div className={\"card-margin\"} style={props.innerStyle}>{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport './Button.css';\n\nfunction Button(props) {\n\n  function getButtonColor() {\n    if (props.isPrimary) {\n      return \"button-primary\"\n    }\n    return \"\";\n  }\n\n  return (\n    <div className={\"button \" + getButtonColor()} onClick={() => props.onClick()}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport './SkeletonPulse.css';\n\nfunction SkeletonPulse(props) {\n  return (\n    <div className=\"skeleton-pulse\" style={props.style}/>\n  );\n}\n\nexport default SkeletonPulse;\n","import React from \"react\";\nimport \"./SongCard.css\";\nimport SkeletonPulse from \"../skeleton-pulse/SkeletonPulse\";\n\nfunction SongCard(props) {\n  return (\n    <div className=\"song-card\" style={props.style} onClick={() => props.onClick()}>\n      <div className=\"song-card-margin\">\n        <div className=\"song-card-album-art\">\n          { props.skeletonPulse === undefined ? \n            <img\n              alt=\"album art\"\n              src=\"https://99designs-blog.imgix.net/blog/wp-content/uploads/2017/12/attachment_68585523.jpg\"\n            ></img> :\n            <SkeletonPulse></SkeletonPulse> \n          }\n        </div>\n        <div className=\"song-card-info\">\n          <h2>\n            { props.skeletonPulse === undefined ? \n              \"Blinding Lights\" :\n              <SkeletonPulse style={{width: \"128px\", height: \"24px\"}}/>\n            }\n          </h2>\n          <p>\n          { props.skeletonPulse === undefined ? \n              \"The Weeknd - After Hours\" :\n              <SkeletonPulse style={{width: \"200px\", height: \"20px\"}}/>\n            }\n          </p>\n          <p className=\"subtitle\">\n            { props.skeletonPulse === undefined ? \n              \"Playlist Count: 18\" :\n              <SkeletonPulse style={{width: \"81px\", height: \"12px\"}}/>\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SongCard;\n","import React from \"react\";\nimport \"./AlbumCard.css\";\nimport SkeletonPulse from \"../skeleton-pulse/SkeletonPulse\";\n\nfunction AlbumCard(props) {\n  return (\n    <div className=\"album-card\" style={props.style} onClick={() => props.onClick()}>\n      <div className=\"album-card-margin\">\n        <div className=\"album-card-album-art\">\n          { props.skeletonPulse === undefined ? \n            <img\n              alt=\"album art\"\n              src=\"https://99designs-blog.imgix.net/blog/wp-content/uploads/2017/12/attachment_68585523.jpg\"\n            ></img> :\n            <SkeletonPulse></SkeletonPulse> \n          }\n        </div>\n        <div className=\"album-card-info\">\n          <h2>\n            { props.skeletonPulse === undefined ? \n              \"Blinding Lights\" :\n              <SkeletonPulse style={{width: \"128px\", height: \"24px\"}}/>\n            }\n          </h2>\n          <p>\n          { props.skeletonPulse === undefined ? \n              \"The Weeknd - After Hours\" :\n              <SkeletonPulse style={{width: \"200px\", height: \"20px\"}}/>\n            }\n          </p>\n          <p className=\"subtitle\">\n            { props.skeletonPulse === undefined ? \n              \"Playlist Count: 18\" :\n              <SkeletonPulse style={{width: \"81px\", height: \"12px\"}}/>\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumCard;\n","import React from \"react\";\nimport \"./ArtistCard.css\";\nimport SkeletonPulse from \"../skeleton-pulse/SkeletonPulse\";\n\nfunction ArtistCard(props) {\n  return (\n    <div className=\"artist-card\" style={props.style} onClick={() => props.onClick()}>\n      <div className=\"artist-card-margin\">\n        <div className=\"artist-card-album-art\">\n          { props.skeletonPulse === undefined ? \n            <img\n              alt=\"album art\"\n              src=\"https://99designs-blog.imgix.net/blog/wp-content/uploads/2017/12/attachment_68585523.jpg\"\n            ></img> :\n            <SkeletonPulse></SkeletonPulse> \n          }\n        </div>\n        <div className=\"artist-card-info\">\n          <h2>\n            { props.skeletonPulse === undefined ? \n              \"The Weeknd\" :\n              <SkeletonPulse style={{width: \"128px\", height: \"24px\"}}/>\n            }\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ArtistCard;\n","import React, { useState, useEffect } from \"react\";\nimport './Landing.css';\n\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nimport { Card } from './../../containers';\nimport { Button } from './../../components';\n\nfunction Landing() {\n\n  const [ willRedirectSongs, redirectSongs ] = useState(false);\n\n  useEffect(() => {\n    if (willRedirectSongs) {\n      redirectSongs(false)\n    }\n  }, [willRedirectSongs]);\n\n  function openSongView() {\n    redirectSongs(true);\n  }\n\n  return (\n    <div className=\"landing flex-center\">\n      { willRedirectSongs ? <Redirect to=\"/app/songs\"></Redirect> : null}\n      <div className=\"landing-content flex-center\">\n        <Card>\n          <h1>CS122B</h1>\n          <p>\n            What are we doing\n          </p>\n          <Button isPrimary={true} onClick={() => openSongView()}>\n            Join us\n          </Button>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      Made with ❤ over Zoom @ UCI\n      <p className=\"subtitle\">\n        Zachary Pinto and Lasse Nordahl\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport './Sidebar.css';\n\nimport { Link } from \"react-router-dom\"\n\nfunction Sidebar(props) {\n  return (\n    <div className={\"sidebar\" + (props.showSidebar ? \" sidebar-expanded\" : \"\")}>\n      { props.showSidebar ? \n        <React.Fragment>\n          <Link to=\"/app/songs\">Songs</Link>\n          <Link to=\"/app/albums\">Albums</Link>\n          <Link to=\"/app/artists\">Artists</Link>\n        </React.Fragment>\n        : null \n      }\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./ContentView.css\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  Button,\n  SkeletonPulse,\n  SongCard,\n  AlbumCard,\n  ArtistCard,\n} from \"../../components\";\nimport { Card } from \"../../containers\";\n\nfunction ContentView({ props, match }) {\n  // Selection Variables\n  const [selectedCardId, setSelectedCardId] = useState(null);\n\n  // Redirect Variables\n  const [willRedirectSong, redirectSong] = useState(false);\n  const [willRedirectArtist, redirectArtist] = useState(false);\n  const [willRedirectAlbum, redirectAlbum] = useState(false);\n\n  const [songs, setSongs] = useState(null);\n\n  useEffect(() => {\n    // Reset redirect variables where needed\n    if (willRedirectArtist) {\n      redirectArtist(false);\n    }\n    if (willRedirectAlbum) {\n      redirectAlbum(false);\n    }\n    if (willRedirectSong) {\n      redirectSong(false);\n    }\n  }, [willRedirectArtist, willRedirectAlbum, willRedirectSong]);\n\n  useEffect(() => {\n    if (selectedCardId !== null) {\n      redirectSong(true);\n    }\n  }, [selectedCardId]);\n\n  function selectCard(id) {\n    setSelectedCardId(id);\n  }\n\n  function renderContentCards() {\n    if (match.params.contentType === \"songs\") {\n      return [1, 2, 3, 4, 5, 6].map(function (item, index) {\n        return (\n          <SongCard\n            song={item}\n            key={index}\n            style={{ margin: \"32px\" }}\n            onClick={() => selectCard(item)}\n            skeletonPulse\n          ></SongCard>\n        );\n      });\n    } else if (match.params.contentType === \"albums\") {\n      return [1, 2, 3, 4, 5, 6].map(function (item, index) {\n        return (\n          <AlbumCard\n            album={item}\n            key={index}\n            style={{ margin: \"32px\" }}\n            onClick={() => selectCard(item)}\n            skeletonPulse\n          ></AlbumCard>\n        );\n      });\n    } else if (match.params.contentType === \"artists\") {\n      return [1, 2, 3, 4, 5, 6].map(function (item, index) {\n        return (\n          <ArtistCard\n            artist={item}\n            key={index}\n            style={{ margin: \"32px\" }}\n            onClick={() => selectCard(item)}\n            skeletonPulse\n          ></ArtistCard>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <div className=\"content-view\">\n      {willRedirectSong ? (\n        <Redirect push to={\"/app/songs/\" + selectedCardId}></Redirect>\n      ) : null}\n      <div className=\"content-view-content\">\n        <div className=\"content-view-search\">\n          <input></input>\n          <div style={{ width: \"48px\" }}></div>\n          <Button isPrimary={true}>Search</Button>\n        </div>\n        <div className=\"content-view-filter-wrapper\">\n          <Card\n            className=\"content-view-filter\"\n            innerStyle={{\n              display: \"flex\",\n              \"flex-direction\": \"row\",\n              margin: \"8px 24px 8px 24px\",\n            }}\n          >\n            <p>Song</p>\n            <p>Album</p>\n            <p>Artist</p>\n            <p>Popularity</p>\n          </Card>\n        </div>\n        <div className=\"content-view-cards\">{renderContentCards()}</div>\n        <div\n          className=\"content-view-filter-wrapper\"\n          style={{ marginTop: \"64px\", marginBottom: \"0px\" }}\n        >\n          <Card\n            className=\"content-view-filter\"\n            innerStyle={{\n              display: \"flex\",\n              \"flex-direction\": \"row\",\n              margin: \"8px 24px 8px 24px\",\n            }}\n          >\n            <p>1</p>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentView;\n","import React, { useState, useEffect } from \"react\";\nimport \"./SelectedView.css\";\n\nimport { SkeletonPulse } from \"../../components\";\n\nfunction SelectedView({ props, match }) {\n  const [expandCard, setExpandCard] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n\n  // Expand the card after the API request is made for the content\n  useEffect(() => {\n    setTimeout(() => {\n      setExpandCard(true);\n\n      setTimeout(() => {\n        setShowDetails(true);\n      }, 500);\n    }, 250);\n  }, []);\n\n  return (\n    <div className=\"selected-view\">\n      <div\n        className={\n          \"selected-view-card\" + (expandCard ? \" selected-view-card-expanded\" : \"\")\n        }\n      >\n        <div className=\"selected-view-song-info\">\n          <div className=\"selected-view-main-info\">\n            <div className=\"selected-view-album-art\">\n              <SkeletonPulse></SkeletonPulse>\n            </div>\n            <div className=\"selected-view-details\">\n              <h2>\n                <SkeletonPulse style={{ width: \"160px\", height: \"24px\" }} />\n              </h2>\n              <p>\n                <SkeletonPulse style={{ width: \"256px\", height: \"24px\" }} />\n              </p>\n              <p>\n                <SkeletonPulse style={{ width: \"128px\", height: \"24px\" }} />\n              </p>\n            </div>\n          </div>\n          {showDetails ? (\n            <div className=\"selected-view-extra-info\">\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (item, index) {\n                return (\n                  <div\n                    className={\"fade-in\"}\n                    style={{\n                      height: \"20px\",\n                      width: \"110px\",\n                      margin: \"24px 0px 0px 24px\",\n                      animationDelay: index / 6 + 's',\n                    }}\n                  >\n                    <SkeletonPulse></SkeletonPulse>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectedView;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./helper.css\";\n\nimport {\n  Landing,\n  Footer,\n  Sidebar,\n  ContentView,\n  SelectedView,\n} from \"./app/views\";\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={\"/unnamed\"}>\n        <Route path=\"/app\">\n          <Sidebar showSidebar={showSidebar}></Sidebar>\n        </Route>\n        <div className=\"app-content\">\n          <Switch>\n            <Route exact path=\"/landing\" component={Landing}></Route>\n            <Route path=\"/app\">\n              <div\n                className=\"app-content-sidebar-button\"\n                onClick={() => setShowSidebar(!showSidebar)}\n              >\n                <span style={{ marginBottom: \"2px\" }}>\n                  {showSidebar ? \"<\" : \">\"}\n                </span>\n              </div>\n              <div className=\"app-content-sidebar-route\">\n                <Route path=\"/app/:contentType\">\n                  {({match}) => {\n                    return <h2>{match.params.contentType}</h2>\n                  }}\n                </Route>\n              </div>\n              <div className=\"app-header\"></div>\n              <Route\n                exact\n                path=\"/app/:contentType\"\n                component={ContentView}\n              ></Route>\n              <Route\n                path=\"/app/:contentType/:itemId\"\n                component={SelectedView}\n              ></Route>\n              <Footer />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}